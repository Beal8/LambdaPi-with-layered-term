(lang dune 2.9)
(name lambdapi)
(version 6b453ab1-dirty)
(library
 (name lambdapi.common)
 (kind normal)
 (archives (byte common/common.cma) (native common/common.cmxa))
 (plugins (byte common/common.cma) (native common/common.cmxs))
 (native_archives common/common.a)
 (requires timed lambdapi.lplib)
 (main_module_name Common)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Common)
   (modules
    ((name Console) (obj_name common__Console) (visibility public) (impl))
    ((name Debug) (obj_name common__Debug) (visibility public) (impl))
    ((name Error) (obj_name common__Error) (visibility public) (impl))
    ((name Escape) (obj_name common__Escape) (visibility public) (impl))
    ((name Library) (obj_name common__Library) (visibility public) (impl))
    ((name Package) (obj_name common__Package) (visibility public) (impl))
    ((name Path) (obj_name common__Path) (visibility public) (impl))
    ((name Pos) (obj_name common__Pos) (visibility public) (impl)))
   (alias_module
    (name Common)
    (obj_name common)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.core)
 (kind normal)
 (synopsis "LambdaPi interactive theorem prover [core]")
 (archives (byte core/core.cma) (native core/core.cmxa))
 (plugins (byte core/core.cma) (native core/core.cmxs))
 (native_archives core/core.a)
 (requires lambdapi.common lambdapi.lplib pratter bindlib why3)
 (main_module_name Core)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Core)
   (modules
    ((name Builtin) (obj_name core__Builtin) (visibility public) (impl))
    ((name Ctxt) (obj_name core__Ctxt) (visibility public) (impl))
    ((name Env) (obj_name core__Env) (visibility public) (impl))
    ((name Eval) (obj_name core__Eval) (visibility public) (impl) (intf))
    ((name Infer) (obj_name core__Infer) (visibility public) (impl) (intf))
    ((name Inverse) (obj_name core__Inverse) (visibility public) (impl))
    ((name Layer) (obj_name core__Layer) (visibility public) (impl))
    ((name LibMeta) (obj_name core__LibMeta) (visibility public) (impl))
    ((name LibTerm) (obj_name core__LibTerm) (visibility public) (impl))
    ((name Print) (obj_name core__Print) (visibility public) (impl))
    ((name Sig_state) (obj_name core__Sig_state) (visibility public) (impl))
    ((name Sign) (obj_name core__Sign) (visibility public) (impl))
    ((name Term) (obj_name core__Term) (visibility public) (impl) (intf))
    ((name Test) (obj_name core__Test) (visibility public) (impl))
    ((name Tree) (obj_name core__Tree) (visibility public) (impl))
    ((name Tree_type) (obj_name core__Tree_type) (visibility public) (impl))
    ((name Unif) (obj_name core__Unif) (visibility public) (impl) (intf))
    ((name Unif_rule) (obj_name core__Unif_rule) (visibility public) (impl))
    ((name Version) (obj_name core__Version) (visibility public) (impl)))
   (alias_module
    (name Core)
    (obj_name core)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.handle)
 (kind normal)
 (archives (byte handle/handle.cma) (native handle/handle.cmxa))
 (plugins (byte handle/handle.cma) (native handle/handle.cmxs))
 (native_archives handle/handle.a)
 (requires lambdapi.core lambdapi.parsing lambdapi.tool)
 (main_module_name Handle)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Handle)
   (modules
    ((name Command)
     (obj_name handle__Command)
     (visibility public)
     (impl)
     (intf))
    ((name Compile) (obj_name handle__Compile) (visibility public) (impl))
    ((name Inductive) (obj_name handle__Inductive) (visibility public) (impl))
    ((name Proof) (obj_name handle__Proof) (visibility public) (impl))
    ((name Query) (obj_name handle__Query) (visibility public) (impl) (intf))
    ((name Rewrite) (obj_name handle__Rewrite) (visibility public) (impl))
    ((name Tactic) (obj_name handle__Tactic) (visibility public) (impl))
    ((name Why3_tactic)
     (obj_name handle__Why3_tactic)
     (visibility public)
     (impl)))
   (alias_module
    (name Handle)
    (obj_name handle)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.lplib)
 (kind normal)
 (archives (byte lplib/lplib.cma) (native lplib/lplib.cmxa))
 (plugins (byte lplib/lplib.cma) (native lplib/lplib.cmxs))
 (foreign_objects lplib/realpath.o)
 (foreign_archives lplib/liblplib_stubs.a)
 (native_archives lplib/lplib.a)
 (requires stdlib-shims str unix)
 (main_module_name Lplib)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Lplib)
   (modules
    ((name Array) (obj_name lplib__Array) (visibility public) (impl))
    ((name Base) (obj_name lplib__Base) (visibility public) (impl))
    ((name Extra) (obj_name lplib__Extra) (visibility public) (impl))
    ((name Filename) (obj_name lplib__Filename) (visibility public) (impl))
    ((name List) (obj_name lplib__List) (visibility public) (impl))
    ((name Option) (obj_name lplib__Option) (visibility public) (impl))
    ((name Range) (obj_name lplib__Range) (visibility public) (impl) (intf))
    ((name RangeMap)
     (obj_name lplib__RangeMap)
     (visibility public)
     (impl)
     (intf))
    ((name RangeMap_intf)
     (obj_name lplib__RangeMap_intf)
     (visibility public)
     (impl))
    ((name Range_intf)
     (obj_name lplib__Range_intf)
     (visibility public)
     (impl))
    ((name String) (obj_name lplib__String) (visibility public) (impl)))
   (alias_module
    (name Lplib)
    (obj_name lplib)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.lsp)
 (kind normal)
 (archives (byte lsp/lsp.cma) (native lsp/lsp.cmxa))
 (plugins (byte lsp/lsp.cma) (native lsp/lsp.cmxs))
 (native_archives lsp/lsp.a)
 (requires yojson lambdapi.pure)
 (main_module_name Lsp)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Lsp)
   (modules
    ((name Lp_doc) (obj_name lsp__Lp_doc) (visibility public) (impl))
    ((name Lp_lsp) (obj_name lsp__Lp_lsp) (visibility public) (impl) (intf))
    ((name Lsp_base)
     (obj_name lsp__Lsp_base)
     (visibility public)
     (impl)
     (intf))
    ((name Lsp_io) (obj_name lsp__Lsp_io) (visibility public) (impl)))
   (alias_module
    (name Lsp)
    (obj_name lsp)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.parsing)
 (kind normal)
 (archives (byte parsing/parsing.cma) (native parsing/parsing.cmxa))
 (plugins (byte parsing/parsing.cma) (native parsing/parsing.cmxs))
 (native_archives parsing/parsing.a)
 (requires lambdapi.core menhirLib pratter sedlex sedlex.ppx lambdapi.common)
 (main_module_name Parsing)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Parsing)
   (modules
    ((name DkLexer) (obj_name parsing__DkLexer) (visibility public) (impl))
    ((name DkParser)
     (obj_name parsing__DkParser)
     (visibility public)
     (impl)
     (intf))
    ((name LpLexer) (obj_name parsing__LpLexer) (visibility public) (impl))
    ((name LpParser)
     (obj_name parsing__LpParser)
     (visibility public)
     (impl)
     (intf))
    ((name Maker) (obj_name parsing__Maker) (visibility public) (impl))
    ((name Parser) (obj_name parsing__Parser) (visibility public) (impl))
    ((name Pratt) (obj_name parsing__Pratt) (visibility public) (impl))
    ((name Pretty) (obj_name parsing__Pretty) (visibility public) (impl))
    ((name Scope) (obj_name parsing__Scope) (visibility public) (impl) (intf))
    ((name Syntax) (obj_name parsing__Syntax) (visibility public) (impl))
    ((name Test) (obj_name parsing__Test) (visibility public) (impl)))
   (alias_module
    (name Parsing)
    (obj_name parsing)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
(library
 (name lambdapi.pure)
 (kind normal)
 (archives (byte pure/pure.cma) (native pure/pure.cmxa))
 (plugins (byte pure/pure.cma) (native pure/pure.cmxs))
 (native_archives pure/pure.a)
 (requires lambdapi.handle lambdapi.core)
 (main_module_name Pure)
 (modes byte native)
 (modules
  (singleton (name Pure) (obj_name pure) (visibility public) (impl) (intf))))
(library
 (name lambdapi.tool)
 (kind normal)
 (archives (byte tool/tool.cma) (native tool/tool.cmxa))
 (plugins (byte tool/tool.cma) (native tool/tool.cmxs))
 (native_archives tool/tool.a)
 (requires lambdapi.parsing lambdapi.core)
 (main_module_name Tool)
 (modes byte native)
 (modules
  (wrapped
   (main_module_name Tool)
   (modules
    ((name External) (obj_name tool__External) (visibility public) (impl))
    ((name Hrs) (obj_name tool__Hrs) (visibility public) (impl))
    ((name Sr) (obj_name tool__Sr) (visibility public) (impl) (intf))
    ((name Tree_graphviz)
     (obj_name tool__Tree_graphviz)
     (visibility public)
     (impl))
    ((name Xtc) (obj_name tool__Xtc) (visibility public) (impl)))
   (alias_module
    (name Tool)
    (obj_name tool)
    (visibility public)
    (kind alias)
    (impl))
   (wrapped true))))
